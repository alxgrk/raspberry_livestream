# This is the nginx configuration file for setting up a simple live streaming server.
worker_processes  1;

events {
  worker_connections  1024;
}

rtmp {
  server {
    listen 1935;
    ping 30s;
    chunk_size 8192; # high for lowering cpu overhead
    notify_method get;
    max_streams 10;

    application live {
      live on;

      gop_cache on; #open GOP cache for reducing the wating time for the first picture of video

      on_play http://localhost/auth-rewrite;

      allow publish 127.0.0.1;
      deny publish all;
      #allow play 127.0.0.1;
      #allow play 192.168.0.0/16;
      #deny play all;
      allow play all;
    }
  }
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout  65;

  server {
    listen       80;
    server_name  +++DOMAIN+++;

    location / {
        return 301 https://$host$request_uri;
    }

    location /.well-known/acme-challenge/ {
        root /usr/local/openresty/certbot;
    }
  }

  # only reachable from the pi itself
  server {
    listen       80;
    server_name  localhost;

    allow  127.0.0.1;
    deny   all;

    root /usr/local/openresty/nginx/;

    location /live {
      flv_live on;
    }

    location /stat {
      rtmp_stat all;
      rtmp_stat_format json;
    }

    location /control {
      rtmp_control all; 
    }
  
    # approach taken from https://stackoverflow.com/questions/54180469/nginx-decode-url-query-parameter-and-forward-it-as-request-header 
    location /auth-rewrite {
      set $auth $arg_basic_auth;
      rewrite_by_lua_block {
        ngx.var.auth = ngx.unescape_uri(ngx.var.auth)
      }
      proxy_set_header Authorization "Basic $auth";
      proxy_pass http://localhost/auth.html;
    }

    location /auth {
      auth_basic 'pi-stream';
      auth_basic_user_file /usr/local/openresty/conf/.htpasswd;
    }

    location = /clients.html {
      if ($remote_user != admin) {
        return 401 "Unauthorized";
      }
    }

    location /clients { }

  }

  server {
    listen       443 ssl;
    server_name  +++DOMAIN+++;

    ssl_certificate /etc/letsencrypt/live/+++DOMAIN+++/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/+++DOMAIN+++/privkey.pem;
    include /usr/local/openresty/certbot/conf/options-ssl-nginx.conf;
    ssl_dhparam /usr/local/openresty/certbot/conf/ssl-dhparams.pem;

    allow all;

    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

    root /usr/local/openresty/nginx/;

    location / {
      return 404 "Not found.";
    }

    location = / {
      proxy_pass https://+++DOMAIN+++/index.html;
    }

    location ~ \.(png|html|css|js|ico)$ {

    }

    location /live {
      flv_live on;
    }

    location /auth {
      auth_basic 'pi-stream';
      auth_basic_user_file /usr/local/openresty/conf/.htpasswd;
    }

    location = /clients.html {
      auth_basic 'pi-stream';
      auth_basic_user_file /usr/local/openresty/conf/.htpasswd;

      proxy_pass http://localhost/clients.html;
    }

  }

}
